{"version":3,"sources":["component/OldVersionBoard/TextForm.js","component/OldVersionBoard/Column.js","component/OldVersionBoard/Card.js","component/OldVersionBoard/Board.js","component/DndProviderWrap/index.js","component/OldVersionBoard/index.js","component/layout/Header.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","onSubmit","event","form","target","preventDefault","props","input","value","reset","this","ref","node","type","className","name","placeholder","Component","Column","title","children","addCard","DraggableCard","mainProps","useDrag","item","id","isDragging","monitor","console","log","getItem","collect","end","dropResult","drag","useDrop","accept","hover","columnId","columnIndex","draggingItem","moveCard","drop","cn","isSpacer","Board","cards","columns","addColumn","map","column","bind","cardIds","cardId","find","card","index","length","Comp","_columnId","_cardId","initialCards","Array","from","initialColumns","i","slice","BoardApp","state","_title","trim","newColumn","setState","newCard","destColumnId","_","flowRight","ids","filter","DndProviderWrap","DndProvider","backend","HTML5Backend","Header","style","fontSize","fontWeight","display","justifyContent","margin","background","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecc6eb0f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport class TextForm extends Component {\r\n  onSubmit = event => {\r\n    const form = event.target;\r\n    event.preventDefault();\r\n    this.props.onSubmit(form.input.value);\r\n    form.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} ref={node => (this.form = node)}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"TextForm__input\"\r\n          name=\"input\"\r\n          placeholder={this.props.placeholder}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {TextForm} from './TextForm';\r\n\r\nexport function Column(props) {\r\n  return (\r\n    <div className=\"Column\">\r\n      <div className=\"Column__title\">{props.title}</div>\r\n      {props.children}\r\n      <TextForm onSubmit={props.addCard} placeholder=\"Add card...\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DragSource, DropTarget } from \"react-dnd\";\r\nimport cn from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\n\r\nexport function DraggableCard(mainProps) {\r\n  //   console.log(mainProps, \"===p\");\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: {\r\n      type: \"ItemTypes.CARD\",\r\n      id: mainProps.id,\r\n    },\r\n    isDragging(monitor){\r\nconsole.log(monitor.getItem(),\"===\");\r\nreturn mainProps.id === monitor.getItem().id\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n    end: (dropResult, monitor) => {\r\n        return{isDragging:false}\r\n    },\r\n  });\r\n  const [, drop] = useDrop({\r\n    accept: \"ItemTypes.CARD\",\r\n    // canDrop: () => false,\r\n    hover(props, monitor) {\r\n      const { columnId, columnIndex } = mainProps;\r\n      const draggingItem = monitor.getItem();\r\n\r\n      if (draggingItem.id !== mainProps.id) {\r\n          console.log(\"===move\")\r\n        mainProps.moveCard(draggingItem.id, columnId, columnIndex);\r\n      }\r\n    },\r\n  });\r\n  console.log(\"isDragging\", isDragging);\r\n  return (\r\n    <div\r\n      ref={(node) => drag(drop(node))}\r\n      className={cn(\"Card\", {\r\n        \"Card--dragging\": isDragging,\r\n        \"Card--spacer\": mainProps.isSpacer,\r\n      })}\r\n    >\r\n      <div className=\"Card__title\">{mainProps.title}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// export const DraggableCard = _.flowRight([\r\n//   DropTarget(\r\n//     \"Card\",\r\n//     {\r\n//       hover(props, monitor) {\r\n//         const { columnId, columnIndex } = props;\r\n//         const draggingItem = monitor.getItem();\r\n//         if (draggingItem.id !== props.id) {\r\n//           props.moveCard(draggingItem.id, columnId, columnIndex);\r\n//         }\r\n//       },\r\n//     },\r\n//     (connect) => ({\r\n//       connectDropTarget: connect.dropTarget(),\r\n//     })\r\n//   ),\r\n//   DragSource(\r\n//     \"Card\",\r\n//     {\r\n//       beginDrag(props) {\r\n//         return { id: props.id };\r\n//       },\r\n\r\n//       isDragging(props, monitor) {\r\n//         return props.id === monitor.getItem().id;\r\n//       },\r\n//     },\r\n//     (connect, monitor) => ({\r\n//       connectDragSource: connect.dragSource(),\r\n//       isDragging: monitor.isDragging(),\r\n//     })\r\n//   ),\r\n// ])(Card);\r\n","import React from 'react';\r\nimport {Column} from './Column';\r\nimport {DraggableCard} from './Card';\r\nimport {TextForm} from './TextForm';\r\n\r\nexport function Board({cards, columns, moveCard, addCard, addColumn}) {\r\n  return (\r\n    <div className=\"Board\">\r\n      {columns.map(column => (\r\n        <Column\r\n          key={column.id}\r\n          title={column.title}\r\n          addCard={addCard.bind(null, column.id)}\r\n        >\r\n          {column.cardIds\r\n            .map(cardId => cards.find(card => card.id === cardId))\r\n            .map((card, index) => (\r\n              <DraggableCard\r\n                key={card.id}\r\n                id={card.id}\r\n                columnId={column.id}\r\n                columnIndex={index}\r\n                title={card.title}\r\n                moveCard={moveCard}\r\n              />\r\n            ))}\r\n          {column.cardIds.length === 0 && (\r\n            <DraggableCard\r\n              isSpacer\r\n              moveCard={cardId => moveCard(cardId, column.id, 0)}\r\n            />\r\n          )}\r\n        </Column>\r\n      ))}\r\n      <div className=\"Column\">\r\n        <TextForm onSubmit={addColumn} placeholder=\"Add Column...\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport React from \"react\";\r\nexport default (Comp) => (props) => (\r\n  <DndProvider backend={HTML5Backend}>\r\n    <Comp {...props} />\r\n  </DndProvider>\r\n);","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Board } from \"./Board\";\r\nimport DndProviderWrap from \"../DndProviderWrap/index\";\r\nimport './styles.css';\r\n\r\nlet _columnId = 0;\r\nlet _cardId = 0;\r\n\r\nconst initialCards = Array.from({ length: 9 }).map(() => ({\r\n  id: ++_cardId,\r\n  title: `Card ${_cardId}`,\r\n}));\r\n\r\nconst initialColumns = [\"TODO\", \"Doing\", \"Done\"].map((title, i) => ({\r\n  id: _columnId++,\r\n  title,\r\n  cardIds: initialCards.slice(i * 3, i * 3 + 3).map((card) => card.id),\r\n}));\r\n\r\nclass BoardApp extends Component {\r\n  state = {\r\n    cards: initialCards,\r\n    columns: initialColumns,\r\n  };\r\n\r\n  addColumn = (_title) => {\r\n    const title = _title.trim();\r\n    if (!title) return;\r\n\r\n    const newColumn = {\r\n      id: ++_columnId,\r\n      title,\r\n      cardIds: [],\r\n    };\r\n    this.setState((state) => ({\r\n      columns: [...state.columns, newColumn],\r\n    }));\r\n  };\r\n\r\n  addCard = (columnId, _title) => {\r\n    const title = _title.trim();\r\n    if (!title) return;\r\n\r\n    const newCard = { id: ++_cardId, title };\r\n    this.setState((state) => ({\r\n      cards: [...state.cards, newCard],\r\n      columns: state.columns.map((column) =>\r\n        column.id === columnId\r\n          ? { ...column, cardIds: [...column.cardIds, newCard.id] }\r\n          : column\r\n      ),\r\n    }));\r\n  };\r\n\r\n  moveCard = (cardId, destColumnId, index) => {\r\n    console.log(\"cardId\", \"destColumnId\", \"index\");\r\n    console.log(cardId, destColumnId, index);\r\n\r\n    this.setState((state) => ({\r\n      columns: state.columns.map((column) => ({\r\n        ...column,\r\n        cardIds: _.flowRight(\r\n          // 2) If this is the destination column, insert the cardId.\r\n          (ids) =>\r\n            column.id === destColumnId\r\n              ? [...ids.slice(0, index), cardId, ...ids.slice(index)]\r\n              : ids,\r\n          // 1) Remove the cardId for all columns\r\n          (ids) => ids.filter((id) => id !== cardId)\r\n        )(column.cardIds),\r\n      })),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Board\r\n        cards={this.state.cards}\r\n        columns={this.state.columns}\r\n        moveCard={this.moveCard}\r\n        addCard={this.addCard}\r\n        addColumn={this.addColumn}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DndProviderWrap(BoardApp);\r\n","export const Header = () => (\r\n  <div\r\n    style={{\r\n      fontSize: \"2rem\",\r\n      fontWeight: \"bold\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      margin:\"20px\",\r\n      background:\"linear-gradient(90deg,#ff8a00,#e52e71)\",\r\n      color:\"#fff\"\r\n    }}\r\n  >\r\n    Board App\r\n  </div>\r\n);\r\n","import \"./App.css\";\r\n// import {Simpledrag} from \"./component/Simpledrag/index\";\r\n// import {Board} from \"./component/Board/index\";\r\n// import { DrazzlingListDrag } from \"./component/DrazzlingListDrag/index\";\r\nimport BoardApp from \"./component/OldVersionBoard/index\";\r\n\r\nimport { Header } from \"./component/layout/Header.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      {/* <DrazzlingListDrag /> */}\\\r\n      <BoardApp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}